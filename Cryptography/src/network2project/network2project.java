/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package network2project;

import java.io.File;
import java.io.FileInputStream;
import java.io.FileOutputStream;
import javax.crypto.Cipher;//provide the functionality of a cryptographic cipher for Encryption & Decryption
import javax.crypto.CipherOutputStream;//composed of an outputstream & cipher so that write() methods first process data before writing them out to the underling outputstream
import javax.crypto.spec.SecretKeySpec;//this class specifies the secret key
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;

/**
 *
 * @author Thamizh
 */
public class network2project extends javax.swing.JFrame {

    /**
     * Creates new form network2project
     */
    public network2project() {
        initComponents();//this function intiates GUI components
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        file_path = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jButton1.setText("Choose");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("Encrypt");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setText("Decrypt");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(130, 130, 130)
                        .addComponent(file_path, javax.swing.GroupLayout.PREFERRED_SIZE, 201, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jButton1))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(192, 192, 192)
                        .addComponent(jButton2)
                        .addGap(18, 18, 18)
                        .addComponent(jButton3)))
                .addContainerGap(349, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(69, 69, 69)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(file_path, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton1))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton2)
                    .addComponent(jButton3))
                .addContainerGap(313, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        JFileChooser chooser = new JFileChooser();
        chooser.showOpenDialog(null);
        File f = chooser.getSelectedFile();//to choose the image
        file_path.setText(f.getAbsolutePath());
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        try{
            
            //Open Stream
            FileInputStream file = new FileInputStream(file_path.getText());
            
            //Open image
            FileOutputStream outStream = new FileOutputStream("Encrypt.jpg");
            
            //byte dh data type bya5od el key w y7awelohom ly bytes w y7otohom fy array / Matrix 3ashan yebda2 ye3m3el el
            //--> steps beta3et el AES Algorithm w mmken ne8ayar el key dh 3adi bs lazem ne8ayaro fel etneen el enc & dec 
            //--> 3ashan el AES Symmetric Algorithm
            byte k[]="1234567890@#$%^&".getBytes();
            
            //el SecretKey benesta5demo lma nekon ben-implement DES, lakn el SecretKeySpec byt3amel m3a el AES, aw hwa el
            //--> by2ol lel java en el algo el mosta5dam hwa el AES 
            //--> (bne3mel instance/object mno ka-tree2a ashal fy eny 2a2ol lel java enena hanesta5dem el AES)
            SecretKeySpec key = new SecretKeySpec(k, "AES");
            
            //Cipher dh class mn el package dy (import javax.crypto.Cipher;), 3amlna mno instance/object esmo "enc" 
            //--> getInstance() dy function mn el class cipher bet5aleny 2a2dar a3mel object 3ashan asta5dem el Algo AES
            Cipher enc = Cipher.getInstance("AES");
            
            //initialize the encrypt mode (yaret 7d ye2aked 3aleha ya shabab)
            enc.init(Cipher.ENCRYPT_MODE, key);
            
            CipherOutputStream cos = new CipherOutputStream(outStream, enc);
            // Array of data type byte and size 1024 el hya 1 kb
            byte[] buf = new byte[1024];
            int read;
            
////////////// EL WHILE LW 7AD FAHEMHA KOWYES YE2OLHA L2NENA MSH FAHMENHA AWI/////////////////////////////////////
            while(  (read=file.read(buf))  !=-1 )
            {
                // buf : dy el data to be written fel stream w b3deen fel file (el sora)
                // 0 : dy hybda2 yekteb el data dy fel file mn index kam (start offset in data)
                // read: el parameter dh el hwa el mafrood no. of bytes el hyktebhom fel file
                // shakl el function aho : public void write(byte[] buf, int off, int len)
                cos.write(buf,0,read);
            }
            
            //Close File
            file.close();
            //Close el Stream bta3 el image
            outStream.flush();
            //Close cipher stream cos (el a5dna feeh el no3 el Algorithm ..el wa5deno fel object enc & wel stream el feeh
            //--> el image )
            cos.close();
            //Show Message lma el file yet3mlo encryotion tmam
            JOptionPane.showMessageDialog(null, "The file encrypted Successfully");
            Runtime.getRuntime().exec("rundll32 url.dll, FileProtocolHandler "+"Encrypt.jpg");
        }   
        catch(Exception e)
        {
            JOptionPane.showMessageDialog(null, e);
        }
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        try{
            FileInputStream file = new FileInputStream(file_path.getText());
            FileOutputStream outStream = new FileOutputStream("Decrypt.jpg");
            byte k[]="1234567890@#$%^&".getBytes();
            SecretKeySpec key = new SecretKeySpec(k, "AES");
            Cipher enc = Cipher.getInstance("AES");
            enc.init(Cipher.DECRYPT_MODE, key);
            CipherOutputStream cos = new CipherOutputStream(outStream, enc);
            byte[] buf = new byte[1024];
            int read;
            while((read=file.read(buf))!=-1){
                cos.write(buf,0,read);
            }
            file.close();
            outStream.flush();
            cos.close();
            JOptionPane.showMessageDialog(null, "The image was decrypted successfully");
            Runtime.getRuntime().exec("rundll32 url.dll, FileProtocolHandler "+"Decrypt.jpg");
        }catch(Exception e){
            JOptionPane.showMessageDialog(null, e);
        }
    }//GEN-LAST:event_jButton3ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(network2project.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(network2project.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(network2project.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(network2project.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {//if is calling it dispatches thread & it will still be deferred until pending events have been processed
            public void run() {
                new network2project().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField file_path;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    // End of variables declaration//GEN-END:variables
}
